1,
df = pd.read_csv('C:/data/miniproject/finaldata.csv')
a = input()
df_region = df[df['구']==a]
print(a)

2,
# 전처리
df_region.rename(columns={'주택담보대출(연%)':'주택담보대출',
                        '소비자물가지수(전월 대비 증감률)':'소비자물가지수증감률',
                        '  KOSPI_종가':'KOSPI_종가',
                        '  KOSDAQ_종가':'KOSDAQ_종가',
                        '  무담보콜금리(1일)':'무담보콜금리',
                        'KORIBOR(3개월)':'KORIBOR',
                        'CD(91일)':'CD',
                        '국고채(1년)':'국고채_1년',
                        '국고채(10년)':'국고채_10년'},
                        inplace=True)
                        
3,
df_time = df_region.groupby('년월')[['전용면적', '층', '건축년도', '계약년', '계약월',
       '주택담보대출', '미국달러', '일본엔', '유로',
       'KOSPI_종가', 'KOSDAQ_종가', '무담보콜금리', 'KORIBOR', 'CD',
       '국고채_1년', '국고채_10년','면적당가격','년월']].mean()
       
       
4,
X = df_time[['전용면적', '층', '건축년도', '계약년', '계약월',
       '주택담보대출', '미국달러', '일본엔', '유로',
       'KOSPI_종가', 'KOSDAQ_종가', '무담보콜금리', 'KORIBOR', 'CD',
       '국고채_1년', '국고채_10년']]
y = df_time['면적당가격']


5,
df_time[df_time['년월'] == 202301]['면적당가격'].mean()


6,
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=10)
model = LinearRegression().fit(X_train, y_train)

print("학습용 : ", model.score(X_train, y_train))
print("검증용 : ", model.score(X_test, y_test))
predict = model.predict([[85.5, 9, 2020, 2020, 5, 4.58, 1228.7, 9.4222, 1332.83, 2425.08, 740.49, 3.269, 3.74, 3.8, 3.584, 3.411]])
predict


7,
from sklearn.tree import DecisionTreeRegressor
from sklearn.model_selection import train_test_split
predict2 = []
for i in range(0,1000):
    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=10)
    model = DecisionTreeRegressor().fit(X_train, y_train)
    predict = model.predict([[85.5, 9, 2020, 2020, 5, 4.58, 1228.7, 9.4222, 1332.83, 2425.08, 740.49, 3.269, 3.74, 3.8, 3.584, 3.411]])
    predict2.append(predict[0])
print("학습용 : ", model.score(X_train, y_train))
print("검증용 : ", model.score(X_test, y_test))
print("예측값 : ",sum(predict2)/len(predict2))

8,
from sklearn.ensemble import RandomForestRegressor
from sklearn.model_selection import train_test_split
predict3 = []
for i in range(0,1000):
    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=10)
    model = RandomForestRegressor(n_jobs = -1).fit(X_train, y_train)
    predict = model.predict([[85.5, 9, 2020, 2020, 5, 4.58, 1228.7, 9.4222, 1332.83, 2425.08, 740.49, 3.269, 3.74, 3.8, 3.584, 3.411]])
    predict3.append(predict[0])
print("학습용 : ", model.score(X_train, y_train))
print("검증용 : ", model.score(X_test, y_test))
print("예측값 : ",sum(predict3)/len(predict3))
9,
10,
